#!/bin/sh

#
# This tool allows to bootstrap rootfs for the both host and target
# architectures (to the /rootfs-<arch> directories).
#
# rootfs for host architecture is used to facilitate running maintainer scripts
# during installation of packages to target rootfs.
#
# Usage: cross-bs <arch>
#

. /etc/cross-shell/config
. /usr/share/cross-shell/shared-mounts

if [ $# -ne 1 ]; then
   echo "Usage: cross-bs <arch>"
   exit 1
fi

ARCH="$1"
ROOTFS=/rootfs-$ARCH

HOSTARCH=$(dpkg --print-architecture)

ARCHIVES=$ROOTFS/var/cache/apt/archives
if [ $HOSTARCH = $ARCH ]; then
    HOST_ARCHIVES=/var/cache/apt/archives
else
    HOST_ARCHIVES=/var/cache/apt/archives-$ARCH
fi

$ROOT_CMD mkdir -p $HOST_ARCHIVES

if [ $HOSTARCH != $ARCH ]; then
    $ROOT_CMD chown -R $UID:$UID $HOST_ARCHIVES
fi

if [ $HOSTARCH = $ARCH ]; then
    $ROOT_CMD mkdir -p $ARCHIVES
else
    mkdir -p $ARCHIVES
fi

try_bind_mount $HOST_ARCHIVES $ARCHIVES

if [ $HOSTARCH = $ARCH ]; then
    $ROOT_CMD /usr/sbin/debootstrap --components=core \
        $SUITE $ROOTFS $REPO
    $ROOT_CMD sh -c "echo '127.0.0.1 localhost localhost.localdomain' > $ROOTFS/etc/hosts"
else
    PATH=$PATH:/usr/sbin:/sbin
    FAKECHROOT_CROSS=/rootfs-$HOSTARCH
    CROSS_ARCH=$ARCH
    LD_PRELOAD=/usr/lib/fakechroot-cross/libfakechroot-cross.so
    LD_PRELOAD=$LD_PRELOAD:/usr/lib/libfakeroot/libfakeroot-sysv.so
    export CROSS_ARCH PATH FAKECHROOT_CROSS LD_PRELOAD

    /usr/sbin/debootstrap --components=core --arch $ARCH \
        $SUITE $ROOTFS $REPO
    echo "127.0.0.1 localhost localhost.localdomain" > $ROOTFS/etc/hosts
fi
