#!/bin/sh
#
# This tool is a piece of evil magic, which allows one to cross-bootstrap
# target userlands inside of Slind development chroot. Invocation format is:
#
#   slind-shell command arch command_args
#
# The following commands are provided for cross-shell user:
# bs
#   Bootstrap target rootfs inside of development chroot
# sh
#   Execute single command in context of target rootfs, command_args is
#   the command to be executed
# apt
#   Run "apt-get update; apt-get install $*; apt-get clean" for target,
#   command_args is list of packages to install
# pack
#   Create a tar image of your target root filesystem
#
# NOTE: There is a generic problem with bootstrapping when target != host
# architecture - some binary utilities are executed during packages
# installation. cross-shell allows to overcome this problem, by using
# LD_PRELOAD approach. Slind rootfs is created with host == target and calls
# to binary utilities during bootstrapping are intercepted and executed in
# this special rootfs.
#

#set -x

LIBUTILS=/usr/lib/slind-core/libutils.sh
if [ -f "$LIBUTILS" ]; then
        . $LIBUTILS
else
        echo "Error: can't load library $LIBUTILS"
        exit 1
fi

load_slind_config_common
load_slind_config_maintainer_common
load_suites_config

FSTAB=`conf_get_var_relaxed $SLIND_CONFIG cross-shell chr_tgt_fstab`
INITTAB=`conf_get_var_relaxed $SLIND_CONFIG cross-shell chr_tgt_inittab`
HN=`conf_get_var_strict $SLIND_CONFIG cross-shell tgt_hostname`
OUTPUTDIR=`conf_get_var_strict $SLIND_CONFIG cross-shell chr_tgt_image_dir`
SUITE=`conf_get_var_strict $SLIND_CONFIG common slind_suite`
REPO=`conf_get_var_strict $SLIND_CONFIG common slind_mirror`

HOSTARCH=`dpkg --print-architecture`
ARCH="$2"
WHERE=/rootfs-$ARCH
FAKECHROOT_CROSS=/rootfs-$HOSTARCH
DEBOOTSTRAP=/usr/sbin/debootstrap
BASEDIR=`pwd`
CROSS_ARCH=$ARCH
PATH=/usr/sbin:/sbin:${PATH}
LD_PRELOAD=/usr/lib/fakechroot-cross/libfakechroot-cross.so:/usr/lib/libfakeroot/libfakeroot-sysv.so

export CROSS_ARCH PATH FAKECHROOT_CROSS LD_PRELOAD

case "$1" in
	bs)
		if [ "x$ARCH" = "x$HOSTARCH" ]; then
		    # We skip this whole bootstrap shebang if arch is equal to
		    # hostarch, assuming slindctl (or someone else) has already
		    # ran debootstrap into $FAKECHROOT_CROSS.
		    DEBOOTSTRAP=:
	        fi
		    
		# existing /proc generates strange errors during re-run of debootstrap
		test -L $WHERE/proc && rm $WHERE/proc
		if [ "${REPO#file:}" != "$REPO" ]; then
		        $DEBOOTSTRAP --components=core --arch $ARCH $SUITE $WHERE $REPO ${REPO#file://}/$SUITE
			ln -s ${REPO#file://} $WHERE/repo
			REPO=file:///repo
		else
		        if ! [ -f $WHERE/repo/$SUITE ]; then
			    mkdir -p $WHERE/repo
			    cp /usr/lib/slind-core/debootstrap/$SUITE $WHERE/repo/$SUITE
		        fi
		        $DEBOOTSTRAP --components=core --arch $ARCH $SUITE $WHERE $REPO $WHERE/repo/$SUITE
		fi

		# configure apt
		echo "deb $REPO $SUITE core security debug gui" > $WHERE/etc/apt/sources.list
		echo "APT::Architecture \"$ARCH\";" > $WHERE/etc/apt/apt.conf
		# configure target
		if [ -f "$FSTAB" ]; then
			cat $FSTAB > $WHERE/etc/fstab;
		else
			echo "# THIS IS DUMMY FSTAB GENERATED BY cross-shell FOR YOU" > $WHERE/etc/fstab
		fi
		echo "$HN" > $WHERE/etc/hostname
		;;
	sh)
		shift; shift;
		_cmd="$*"
		$FAKECHROOT_CROSS/lib/ld-linux.so.2 --library-path $FAKECHROOT_CROSS/usr/local/lib:$FAKECHROOT_CROSS/lib:$FAKECHROOT_CROSS/usr/lib  $FAKECHROOT_CROSS/bin/busybox chroot $WHERE $_cmd
		;;
	pack)
		unset LD_PRELOAD
		# Create target fstab
		if [ -f "$FSTAB" ]; then
			cat $FSTAB > $WHERE/etc/fstab;
		else
			echo "# THIS IS DUMMY FSTAB GENERATED BY cross-shell FOR YOU" > $WHERE/etc/fstab
		fi
		# Create target inittab
		if [ -f "$INITTAB" ]; then
			cat $INITTAB > $WHERE/etc/inittab;
		else
			echo "# THIS IS DUMMY INITTAB GENERATED BY cross-shell FOR YOU" > $WHERE/etc/inittab
		fi
		echo "$HN" > $WHERE/etc/hostname
		
		# pack things
		( cd $WHERE; \
			tar cf $OUTPUTDIR/rootfs-$ARCH.tar \
				--exclude=debootstrap \
				--exclude=repo \
				--exclude=proc \
				--exclude=dev \
				--exclude='dev/*' * )
		mkdir proc
		tar rf rootfs-$ARCH.tar proc
		tar Af rootfs-$ARCH.tar /usr/lib/cross-shell/devs.tar
		rmdir proc
		;;
esac

